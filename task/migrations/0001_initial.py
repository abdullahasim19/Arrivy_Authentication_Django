# Generated by Django 4.2.4 on 2023-08-31 11:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('notifications', models.JSONField(blank=True, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CheckListInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('master_checklist_id', models.IntegerField(blank=True, null=True)),
                ('task_checklist_id', models.IntegerField(blank=True, null=True)),
                ('is_dirty', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CheckListItemInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('master_checklist_id', models.IntegerField(blank=True, null=True)),
                ('task_checklist_id', models.IntegerField(blank=True, null=True)),
                ('master_checklist_item_id', models.IntegerField(blank=True, null=True)),
                ('task_checklist_item_id', models.IntegerField(blank=True, null=True)),
                ('is_dirty', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalIntegrationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('external_type', models.CharField(blank=True, max_length=100, null=True)),
                ('external_url', models.CharField(blank=True, max_length=100, null=True)),
                ('external_resource_type', models.CharField(blank=True, max_length=100, null=True)),
                ('linked_external_ref', models.CharField(blank=True, max_length=100, null=True)),
                ('is_default', models.BooleanField(blank=True, null=True)),
                ('update_info', models.DateTimeField(blank=True, null=True)),
                ('delete_info', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalModuleInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_id', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExtraField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.CharField(blank=True, max_length=100, null=True)),
                ('values', models.JSONField(blank=True, null=True)),
                ('dropdown_labels_and_values', models.JSONField(blank=True, null=True)),
                ('use_dropdown_labels_and_values_as', models.CharField(choices=[('USE_AS_LABELS', 'Labels'), ('USE_AS_NUMERIC', 'Numeric')], max_length=100)),
                ('dropdown_labels_and_values_order', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FormMetaData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('master_form_id', models.IntegerField(blank=True, null=True)),
                ('form_submission_id', models.IntegerField(blank=True, null=True)),
                ('belongs_to', models.IntegerField(default=1000)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('hash', models.CharField(blank=True, max_length=100, null=True)),
                ('sync_to_google_drive', models.BooleanField(default=True)),
                ('sync_to_egnyte', models.BooleanField(default=True)),
                ('sync_to_onedrive', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskEntityConfirmationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('source_id', models.CharField(blank=True, max_length=100, null=True)),
                ('template', models.IntegerField(blank=True, null=True)),
                ('template_type', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('start_datetime_original_iso_str', models.CharField(blank=True, max_length=100, null=True)),
                ('start_datetime_timezone', models.CharField(blank=True, max_length=100, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime_original_iso_str', models.CharField(blank=True, max_length=100, null=True)),
                ('end_datetime_timezone', models.CharField(blank=True, max_length=100, null=True)),
                ('due_datetime', models.DateTimeField(blank=True, null=True)),
                ('due_datetime_original_iso_str', models.CharField(blank=True, max_length=100, null=True)),
                ('self_scheduling', models.BooleanField(default=False)),
                ('is_without_datetime', models.BooleanField(default=False)),
                ('basic_schedule', models.DateTimeField(blank=True, null=True)),
                ('is_multi_day', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(1001, 'Not started'), (1002, 'Enroute'), (1003, 'Started'), (1004, 'Complete'), (1005, 'Cancel')], default=1001)),
                ('status_id', models.IntegerField(blank=True, null=True)),
                ('status_title', models.CharField(blank=True, max_length=100, null=True)),
                ('notifications', models.JSONField(blank=True, null=True)),
                ('notifications_sent', models.JSONField(blank=True, null=True)),
                ('extra_fields', models.JSONField(blank=True, null=True)),
                ('entity_ids', models.IntegerField(blank=True, null=True)),
                ('skill_ids', models.IntegerField(blank=True, null=True)),
                ('document_ids', models.IntegerField(blank=True, null=True)),
                ('resource_ids', models.IntegerField(blank=True, null=True)),
                ('customer_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_email', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_address_line_1', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_address_line_2', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_address', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_city', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_state', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_country', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_zipcode', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_exact_location', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_mobile_number', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('customer_notes', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_timezone', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_type', models.IntegerField(choices=[(5001, 'Customer'), (5002, 'LEAD')], default=5001)),
                ('is_customer_address_geo_coded', models.BooleanField(blank=True, null=True)),
                ('use_lat_lng_address', models.BooleanField(default=False)),
                ('enable_time_window_display', models.BooleanField(blank=True, null=True)),
                ('time_window_start', models.IntegerField(blank=True, null=True)),
                ('use_assignee_color', models.BooleanField(blank=True, null=True)),
                ('file_ids', models.IntegerField(blank=True, null=True)),
                ('unscheduled', models.BooleanField(default=False)),
                ('pending_review_reminder_time', models.DateTimeField(blank=True, null=True)),
                ('pending_review_reminder_attempts_left', models.IntegerField(blank=True, null=True)),
                ('queued_task_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('is_linked', models.BooleanField(default=False)),
                ('linked_internal_ref', models.IntegerField(blank=True, null=True)),
                ('linked_external_ref', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('routes', models.CharField(blank=True, max_length=100, null=True)),
                ('mileage', models.FloatField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_task_external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('external_url', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_addresses', models.JSONField(blank=True, null=True)),
                ('current_destination', models.JSONField(blank=True, null=True)),
                ('travel_time', models.IntegerField(blank=True, null=True)),
                ('task_time', models.IntegerField(blank=True, null=True)),
                ('total_time', models.IntegerField(blank=True, null=True)),
                ('do_not_send_webhook_notification', models.BooleanField(default=False)),
                ('entity_confirmation_statuses', models.JSONField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('items', models.JSONField(blank=True, null=True)),
                ('route_id', models.CharField(blank=True, max_length=100, null=True)),
                ('internal_route_id', models.IntegerField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('task_final_confirmation_status', models.CharField(default='UN_RESPONDED', max_length=100)),
                ('number_of_workers_required', models.IntegerField(blank=True, null=True)),
                ('worker_ids', models.IntegerField(blank=True, null=True)),
                ('activity_type', models.IntegerField(choices=[(2001, 'Note'), (2002, 'Call'), (2003, 'Appointment'), (2004, 'Todo'), (2005, 'Break'), (2006, 'Email')], default=2001)),
                ('all_day', models.BooleanField(default=False)),
                ('external_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_supply_provided_locked', models.BooleanField(default=False)),
                ('is_supply_returned_locked', models.BooleanField(default=False)),
                ('position_in_route', models.IntegerField(blank=True, null=True)),
                ('task_without_time', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_route_activity', models.BooleanField(default=False)),
                ('is_booking', models.BooleanField(default=False)),
                ('booking_id', models.IntegerField(blank=True, null=True)),
                ('booking_slot_id', models.IntegerField(blank=True, null=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
                ('external_resource_type', models.CharField(blank=True, max_length=100, null=True)),
                ('external_live_track_link', models.TextField(blank=True, null=True)),
                ('enable_expected_date_range', models.BooleanField(default=False)),
                ('expected_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('expected_start_datetime_original_iso_str', models.CharField(blank=True, max_length=100, null=True)),
                ('expected_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('expected_end_datetime_original_iso_str', models.CharField(blank=True, max_length=100, null=True)),
                ('recurring_tasks_settings_id', models.IntegerField(blank=True, null=True)),
                ('recurring_tasks_settings_title', models.CharField(blank=True, max_length=100, null=True)),
                ('send_customer_communications', models.BooleanField(default=False)),
                ('belongs_to_unplanned_route', models.BooleanField(default=False)),
                ('skills_search_operator', models.CharField(blank=True, max_length=100, null=True)),
                ('sms_consent_meta', models.JSONField(blank=True, null=True)),
                ('annotation_history', models.JSONField(blank=True, null=True)),
                ('slot_fields', models.JSONField(blank=True, null=True)),
                ('additional_contacts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='task.additionalcontact')),
                ('checklist_items', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='task.checklistiteminfo')),
                ('checklists', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='task.checklistinfo')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL)),
                ('external_integration_info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='task.externalintegrationinfo')),
                ('external_module_info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='task.externalmoduleinfo')),
                ('forms', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='task.formmetadata')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
                ('structured_entity_confirmation_statuses', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='task.taskentityconfirmationstatus')),
                ('template_extra_fields', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='task.extrafield')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
